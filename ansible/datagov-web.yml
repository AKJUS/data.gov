---
- name: Deploy Wordpress
  hosts: wordpress-web
  serial: "{{ datagov_serial | default(1) }}"
  roles:
    - { role: software/common/tls, tags: [provision, tls] }
    - { role: software/common/php-common, tags: [provision] }
    - { role: geerlingguy.git, tags: [git, provision] }
    - { role: geerlingguy.php-versions, tags: [php, provision] }
    - { role: geerlingguy.php, tags: [php, provision] }
    - { role: geerlingguy.php-mysql, tags: [php, php-mysql, provision] }
    - { role: geerlingguy.php-memcached, tags: [php, php-memcached, provision] }
    - { role: software/common/php-fixes, tags: [php, provision] }
    - { role: geerlingguy.composer, tags: [php, provision] }

- name: Deploy nginx
  hosts: wordpress-web
  roles:
    - role: nginxinc.nginx
      vars:
        nginx_branch: stable
        nginx_state: latest
      tags: [nginx, provision]

- name: Config nginx
  hosts: wordpress-web
  roles:
    - role: nginxinc.nginx_config
      vars:
        nginx_config_cleanup_files:
          - /etc/nginx/conf.d/default.conf

        nginx_config_main_template_enable: true
        nginx_config_main_template:
          template_file: nginx.conf.j2
          conf_file_name: nginx.conf
          conf_file_location: /etc/nginx/
          worker_processes: auto
          pid: /var/run/nginx.pid
          error_log:
            location: /var/log/nginx/error.log
            level: notice
          worker_connections: 1024
          http_enable: true
          http_settings:
            default_type: application/octet-stream
            include: /etc/nginx/mime.types
            access_log_format:
              - name: main
                format: |-
                  '$remote_addr - $remote_user [$time_local] "$request" '
                                      '$status $body_bytes_sent "$http_referer" '
                                      '"$http_user_agent" "$http_x_forwarded_for"'
            access_log_location:
              - name: main
                location: /var/log/nginx/access.log
            sendfile: on
            keepalive_timeout: 65
            server_tokens: "off"
      tags: [nginx, provision]

- name: Deploying Data.gov
  hosts: wordpress-web
  serial: "{{ datagov_serial | default(1) }}"
  roles:
    - { role: gsa.datagov-deploy-wordpress, tags: [deploy, provision] }
  tasks:
    - name: flush handlers
      meta: flush_handlers

    - name: assert app is up
      uri:
        url: https://{{ ansible_fqdn }}/
        follow_redirects: none
        status_code: 200
        # TODO enable cert validation. Staging and production hosts have GSA
        # signed certs which should be valid.
        # https://github.com/GSA/datagov-deploy/issues/900
        validate_certs: false
      register: result
      retries: 10
      delay: 10
      until: not result.failed

    - name: assert access to simplesaml admin is forbidden
      uri:
        url: https://{{ ansible_fqdn }}/app/plugins/saml-20-single-sign-on/saml/www/module.php/core/loginuserpass.php
        status_code: 403
        validate_certs: false
      register: result
      retries: 3
      delay: 10
      until: not result.failed

    - name: assert CRM forms should redirect to general contact form
      uri:
        url: https://{{ ansible_fqdn }}/{{ item }}
        follow_redirects: none
        status_code: 302
        validate_certs: false
      loop:
        - data-request
        - issue
        - story
      register: contact_forms
      retries: 3
      delay: 10
      until: not contact_forms.failed

    - name: assert Location header contains /contact
      assert:
        that: expected_url in item.location
        fail_msg: "Expected Location {{ expected_url }} to be in {{ item.location }}"
      vars:
        expected_url: "{{ ansible_fqdn }}/contact"
      loop: "{{ contact_forms.results }}"

    - name: assert saml2 TLS key is not published
      uri:
        url: https://{{ ansible_fqdn }}/app/uploads/saml-20-single-sign-on/etc/certs/1/1.key
        follow_redirects: none
        status_code: 404
        validate_certs: false


- name: Service-level smoke tests
  hosts: wordpress-web
  tags: [deploy,provision]
  tasks:
    - name: flush handlers
      meta: flush_handlers

    - name: assert app is up
      uri:
        url: "{{ wordpress_service_url }}/"
        follow_redirects: none
        status_code: 200
        # TODO enable cert validation. Staging and production hosts have GSA
        # signed certs which should be valid.
        # https://github.com/GSA/datagov-deploy/issues/900
        validate_certs: false
      run_once: true
      delegate_to: localhost
      become: false
      register: result
      retries: 10
      delay: 10
      until: not result.failed
