#!/bin/bash
set -e
set -o pipefail

help()
{
    echo
    echo "$0: enables egress proxy for a given app."
    echo "Note that this will not set up egress, but rather re-enable egress that has been disabled with disable-egress."
    echo "Syntax: $0 <APP>"
    echo "  <APP> must be a valid cf app in the current space with egress disabled."
    #echo "Options:"
    #echo "  --space <SPACE>: #TODO"
    echo
    echo "To disable egress for an app, use disable-egress."
    exit 1
}

app="$1"
#startspace=$( cf target | grep space: | awk --field-separator ' ' '{ print $2 }')

if [ -z "$app" ]; then
    echo "No app provided."
    help
else
    echo "Checking for app $app in space.."
    if cf apps | awk --field-separator ' ' '{ print $1 }' | grep -q "$app"; then
        echo "$app found."
        echo "Setting environment variable http_proxy.."
        cf set-env "$app" http_proxy 'https://secretrandomuser:secretrandompassword@proxy-gsa-datagov-development-dashboard.apps.internal:8080'
        echo "Setting environment variable https_proxy.."
        cf set-env "$app" https_proxy 'https://secretrandomuser:secretrandompassword@proxy-gsa-datagov-development-dashboard.apps.internal:8080'
        #echo "source is $source"
        #echo "dest is $dest"
        #echo "protocol is $protocol"
        #echo "port is $port"
        #echo "space is $space"
        echo "Adding network policy.."
        cf add-network-policy "$source" "$dest" -s "$space" --protocol "$protocol" --port "$port"
        echo "Restarting $app.."
        cf restart "$app"
    else
        echo "App not found in space."
        help
    fi
fi
